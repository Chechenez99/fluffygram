import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import Button from './Button';
import Input from './Input'; // ‚¨ÖÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º Input

const LoginForm = ({ onLogin, onBack }) => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post("http://localhost:8000/api/auth/jwt/create/", {
        username,
        password,
      });

      console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);

      const { access, refresh, user_id } = response.data;

      if (access && refresh && user_id) {
        localStorage.setItem("access", access);
        localStorage.setItem("refresh", refresh);
        localStorage.setItem("user_id", user_id);
        console.log("üéØ –¢–æ–∫–µ–Ω—ã –∏ user_id —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:", access, refresh, user_id);
        onLogin();
        navigate("/profile");
      } else {
        console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏–ª–∏ user_id");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
      alert("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.");
    }
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="bg-white p-6 rounded-xl shadow-md space-y-4 w-80"
    >
      <h2 className="text-2xl font-bold text-[#7c3aed] text-center">–í—Ö–æ–¥</h2>

      <Input
        type="text"
        placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
        required
      />

      <Input
        type="password"
        placeholder="–ü–∞—Ä–æ–ª—å"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        required
      />

      <Button
        type="submit"
        className="w-full"
      >
        –í–æ–π—Ç–∏
      </Button>
      <Button
        onClick={onBack} 
        variant="secondary"
        className="w-full"
      >
        –ù–∞–∑–∞–¥
      </Button>
    </form>
  );
};

export default LoginForm;
